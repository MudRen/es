#include <mudlib.h>
#include <move.h>

int mount(object me,object who)
{
	object ob, *inv,mount_ob;
	string master_name;
	int master_skill, i;

	seteuid(getuid());
	master_skill = who->query_skill("riding");
	if( master_name = (string)me->query("master") ) {
		if ( !find_player(master_name) ) {
			me->delete("master");
			me->delete("mountable");
		} else
	// This beast has a master, check it.
		if( master_name != (string)who->query("name") ) {
			tell_object(who,
				"这只" + me->query("c_name") + "已经有主人了　\n");
			return 1;
	    }		
	} 
	if( !me->query("mountable") ) {
	// This is a wild beast.
		if( master_skill/2 + random(master_skill/2) > (int)me->query_level() * 5 ) {
			me->set("mountable", 1);
			tell_object(who,"你跳到" + me->query("c_name") + "的背上，并且成功\地将它驯服了！\n");
			tell_room( environment(me), 
				who->query("c_name") + "跳到" + me->query("c_name") + 
				"的背上，并且成功\地驯服了它！\n" , who );
			me->cease_all_attacks();
		} else {
			tell_object(who,"你企图跳到" + me->query("c_name") + "背上，但是很快地摔了下来！\n");
			tell_room( environment(me), 
				who->query("c_name") + "跳到" + me->query("c_name") + 
				"的背上，但是很快地被摔了下来！\n" , who );
			me->kill_ob(who);
			who->block_attack(8);
			return 1;
		}
	} else if( master_skill < (int)me->query_level() * 4 ) {
	// Check if the ider is qualified.
		tell_object(who, 
			"你的骑术还不够高明，还是别试的好　\n");
		return 1;
	}
	seteuid(getuid());
	mount_ob = new("/std/mount_obj");
	mount_ob->set("mount_ob",base_name(me));

	mount_ob->set_name(me->query("name"),
				me->query("c_name"));
	mount_ob->set("long",me->query("long"));
	mount_ob->set("short",me->query("short"));
	mount_ob->set("unit",me->query("unit"));
	mount_ob->set("id",me->query("id"));
	mount_ob->set("max_load",me->query("max_load"));
	mount_ob->set("hp",me->query("hit_points"));
	if( (int)mount_ob->move(who) != MOVE_OK ) {
		mount_ob->remove();
		tell_object(who,"无法骑上座骑 !! 请通知巫师处理 !\n");
		return 1;
	}
		
	who->set_temp("mounting", mount_ob);
	
	tell_object(who,"你跳到" + me->query("c_name") + "背上，如果要下来，用 dismount　\n");
	tell_room( environment(who), 
		who->query("c_name") + "跳到" + me->query("c_name") + 
		"的背上　\n" , who );
         who->set("player_invisible",0);
	inv = all_inventory(me);
	for(i=0; i<sizeof(inv); i++) {
		inv[i]->set("on_mounted",1);
		inv[i]->delete("equipped"); 
		if( (int)inv[i]->move(who) != MOVE_OK ) {
			inv[i]->delete("on_mounted");
			inv[i]->move(environment(who));
		}
	}
	me->remove();
	return 1;
}

int dismount(object me,object who)
{
	int i;
	object *inv, horse,mount_ob;
	string horse_name;

	if ( !horse_name = (string)me->query("mount_ob") ) return 0 ;
	mount_ob = new(horse_name);
	mount_ob->move(environment(who));
	// clear all objects in new horse.
	if ( inv = all_inventory(mount_ob))
		for ( i = 0 ; i < sizeof(inv) ; i ++) {
			inv[i]->delete("equipped");
			inv[i]->remove();
		}
	// recover new horse's hp
	mount_ob->set("hit_points",(int)me->query("hp"));
	mount_ob->set("master",(string)who->query("name"));
	mount_ob->set("mountable",1);

	tell_object(who,"你从" + mount_ob->query("c_name") + "的背上跳了下来　\n");
	tell_room( environment(who), 
		who->query("c_name") + "从" + mount_ob->query("c_name") + "的背上跳了下来　\n" ,
		who );

	who->delete_temp("mounting");

	inv = all_inventory(who) - ({ me });	
	for(i=0; i<sizeof(inv); i++) {
		if( inv[i]->query("on_mounted") ) {
			inv[i]->move(mount_ob);
			inv[i]->delete("on_mounted");
		}
	}
	me->remove();
	return 1;
}

int scare_me(object me)
{
	return 1;
}
