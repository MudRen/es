// available function 
// 	void set_duration( int ) ;	效果长短
// 	void set_effect( int ) ;	( 1 - 25 )
//	void set_type( string );	种类( simple_poison || slow || weak )
//	void set_difficulty( int ); 	失败率 ( 1 - 100 )
//	void set_time( int ); 		可用次数 ( 1 - ? )
// form 2 
//	void set_poison(dur,eff,kind,times,diff);
//
#include <mudlib.h>
#include <conditions.h>
inherit OBJECT;


// some default value
int dur = 5;
int toxic = 1;
string type = "simple_poison";
int times = 1;
int diff = 10;

// begin of interface
void set_duration(int value)
{
	if ( value > 0 ) dur = value;
}
	
void set_effect(int value)
{
	if ( value > 0 ) toxic = value;
	if ( value > 25 ) toxic = 25;
}

void set_difficulty(int value)
{
	if ( value >= 0 && value <= 100 ) diff = value;
}

void set_type(string arg)
{
	if ( ! arg || arg == "" ) return ;
	type = arg;
}

void set_times( int value )
{
	if ( value && value > 0 )
		times = value;
}

void set_poison(int value1, int value2, string arg1, int value3, int value4)
{
	set_duration( value1 );
	set_effect( value2 );
	set_type( arg1 );
	set_difficulty( value3 );
	set_times( value4 );
}
// end of interface 


void create()
{
	seteuid(getuid());
	set_name( "poison pouch", "毒药包" );
	add( "id", ({ "pouch", "poison" }) );
	set_short("毒药包" );
	set_long(
		"这是一包毒药粉，如果你要使用这包毒药，用 poison <某人>。\n" );
	set("unit","包");
	set("poison_msg","%s不住抽蓄, 好像很痛苦的样子....\n");
	set("poison_method","%s把$P撒向%s");
	
}

void init()
{
	add_action( "do_poison", "poison" );
	add_action( "do_check", "check" );
}

int do_check(string arg)
{
	if ( ! arg )
		return 0;
	if ( arg && member_array(arg,query("id"),0) == -1) 
		return 0;
	write(sprintf("这%s%s还可以用%d次。\n",this_object()->query("unit"),query("c_name"),times));
	return 1;
}

// 下毒失败 , return 1 else 0
int checkfault(object me,object target )
{
	int rate,level,iq,dex,skill,kar;
	skill = (int)me->query_skill("venomlogy");
	if ( skill == 0 ) 
		return 1;
	level = (int)me->query_level() - (int)target->query_level();
	iq = (int)me->query_stat("int") - (int)target->query_stat("int");
	kar = (int)me->query_stat("kar") - (int)target->query_stat("kar");
	dex = (int)me->query_stat("dex") - (int)target->query_stat("dex");
// 60 % skill , 18% level, 14% dex 19%kar, total 111
	rate = skill*3/5 + dex + kar + level + iq;
	if( random(rate) > diff ) 
		return 0;
	else
		return 1;
}

int do_poison(string arg)
{
	object user, dest,env,*inv;
	int i,n;
	string message,message2;
	user = this_player();
	env = environment(user);

/*
	if ( times == 0 ) { // 应该不可能走到这里
		write( "这" + query("unit") + query("c_name") + 
			"已经用完了，你随手把它丢掉。\n" );
		remove();
		return 1;
	}
*/

	if( !arg || arg=="" || ! (dest = present(arg,env)) )
		return notify_fail( "你要对谁下毒? \n" ); 
	if( !living(dest) || dest == user ) 
		return notify_fail( "你疯啦 ? \n" );
	if ( dest->query("no_attack") ) 
		return notify_fail( "你不能对这家伙下毒。\n");
	if ( user->query_level() < 4 )
		return notify_fail( "你不能这麽做。\n");

	times--;
	if ( checkfault(user,dest) ) { 
		message = sprintf( (string) query("poison_method"),"你",dest->query("c_name") ) ; 
		write( substr(message,"$P",query("short")) + ", 但是有点控制不当..\n");
		message = sprintf( (string) query("poison_method"),user->query("c_name"),"你");
		tell_object(dest, substr(message,"$P",query("short"))+",但是好像没什麽作用。\n" );
		message = sprintf( (string) query("poison_method"), user->query("c_name"),dest->query("c_name") );
		tell_room(environment(this_player()),
	    substr(message,"$P",query("short")) + "不过看起来没有成功\。\n", ({user,dest}));

		inv = all_inventory( env );
        	n = i = sizeof(inv);
        	while(--i) {
                	if ( living(inv[i]) && !inv[i]->query("no_attack") &&
			     random( inv[i]->query_perm_stat("kar") ) < 10 ){
				tell_object(inv[i],"你不小心吸进毒气....\n");
				inv[i]->set_temp("poison_msg",query("poison_msg"));
                     		(CONDITION_PREFIX + type) ->apply_effect(
                                	inv[i],dur, toxic/(random(n-1) + 1) );
                	}
        	}
	} else {
		message = sprintf( (string) query("poison_method"),"你",dest->query("c_name") ) ; 
		write( substr(message,"$P",query("short"))+".\n");
		message = sprintf( (string) query("poison_method"),user->query("c_name"),"你");
		tell_object(dest, substr(message,"$P",query("short"))+".\n" );
		message = sprintf( (string) query("poison_method"), user->query("c_name"),dest->query("c_name") );
		tell_room( environment(this_player()),substr(message,"$P",query("short")) + "。\n", ({user,dest}));
		( CONDITION_PREFIX + type )->apply_effect(dest,dur,toxic);
		dest->set_temp("poison_msg",query("poison_msg"));
	}
	//dest->kill_ob(user);
	user->kill_ob(dest);
	user->block_attack(2);

	if ( times == 0 ) { 
		write( sprintf("这%s已经用完了，你随手把它丢掉。\n",query("unit"),query("c_name")) );
		remove();
	}
	return 1;
}
