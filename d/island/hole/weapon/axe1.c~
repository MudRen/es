/*
 * Ô­×÷Õß£ºIshige (1995.1)
 * ÐÞ¸ÄÕß£ºIshige (1995.12)
 */

#include <mudlib.h>
#include <daemons.h>
#include <../hole.h>

//inherit REPORT;
inherit WEAPON;

int form;
string AXE_NAME="[1;31;5m¡¸µØÓü¹í¸«¡¹[0;37m";

void create()
{
	set_name( "Stone Axe","÷öµ­ÎÞ¹âµÄÊ¯¸«" );
	add( "id",({ "axe" }) );
	set_short( "÷öµ­ÎÞ¹âµÄÊ¯¸«" );
	set_long(@LONG
	Ò»°Ñ÷öµ­ÎÞ¹âµÄ¸«Í·£¬ËÆºõÕýÒòÎªÃ»ÈËÄÜÁË½â
	Ëü¶ø¸Ðµ½±¯ÉË¡£
LONG
		);
	set( "unit","±ú" );
	set( "type","axe" );
	set( "weapon_class",45 );
	set( "min_damage",10 );
	set( "max_damage",25 );
	set( "bleeding",10 );
	set( "weight",150 );
	set( "value",({ 5800,"silver" }) );
	set( "second",1 );
//	set( "nosecond",1 );
	set( "prevent_insert",1 );
	set( "wield_func","wield_axe" );
	set( "unwield_func","unwield_axe" );
	form=0;
}

void unwield_axe()
{
	string name;
	object holder;
	
	if( !holder=environment(this_object()) ) return;
	name=holder->query( "c_name" );
	if( form==1 ){
	 	tell_room( environment(holder),name+"ÊÖÖÐµÄ"+AXE_NAME+"£¬½¥½¥±ä»ØÔ­À´µÄÑù×Ó¡£\n",holder );
		tell_object( holder,"Ê§È¥Ð°¶ñÁ¦Á¿µÄÖ¸Ê¹£¬ÄãÊÖÖÐµÄ"+AXE_NAME+"½¥½¥±ä»ØÊ¯¸«¡£\n" );
		set_name( "Stone Axe","÷öµ­ÎÞ¹âµÄÊ¯¸«" );
		set_short( "÷öµ­ÎÞ¹âµÄÊ¯¸«" );
		set( "min_damage",10 );
		set( "max_damage",25 );
		set( "prevent_drop",0 );
//		delete( "hit_func" );
		form=0;
		return;
	}
	return;	
}

void wield_axe()
{
	string name;
	object env,holder;
	
	holder = environment(this_object());
	env = environment(holder);
	name = holder->query("c_name");
	
	if ( (int)holder->query("alignment") < -1500 ) {
		tell_room( env,name+"µÄÊ¯¸«ºöÈ»ÎËÎË×÷Ïì£¬Öð½¥±ä³ÉÒ»°ÑÐ°¶ñµÄÎäÆ÷"+AXE_NAME+"¡£\n",holder );
		tell_object( holder,"ÄãÐ°¶ñµÄ±¾ÐÔ»½ÆðÊ¯¸«µÄÁ¦Á¿£¬Ê¹Ëü»Ã»¯³ÉÈË¼äÐ×Æ÷"+AXE_NAME+"¡£\n" );
		set_name( "Abyss Axe","¡¸µØÓü¹í¸«¡¹" );
		set_short( "¡¸µØÓü¹í¸«¡¹" );
		set( "min_damage",25 );
		set( "max_damage",50 );
//		set( "prevent_drop",1 );
//		set( "hit_func","ghost_fight" );
		form=1;
		return ;
	}
	return ;
}

int ghost_fight(object victim,int dam)
{
	object holder;
	int align,max;
	string him,me,bonus;

	if ( !victim ) return 0;
	if( !holder = environment(this_object()) || !living(holder) ) return 0;
	else {
		/* ¾ö¶¨ÌØÊâ¹¥»÷µÄÉËº¦¶È */
		align=holder->query( "alignment" );
		if( align < -150000 ) { dam=35; }
		else if( align < -100000 ) { dam=30; }
		else if( align < -45000 ) { dam=25; }
		else if( align < -15000 ) { dam=20; }
		else if( align < -4500 ) { dam=15; }
		else if( align < -1500 ) { dam=10; }
		if ( random(50) < 15 ) {
		
		if ( (int)holder->query( "spell_points" )< 5 ) {
				tell_object( holder,set_color( "ÄãµÄ¾«Éñ²»×ãÒÔÕÙ»½µØÓü¶ñÄ§....\n","HIR" ) );
				return 1;
			}
			
			him=victim->query( "c_name" );
			me=holder->query( "c_name" );
			tell_object( holder,set_color(
				"Äã½«ÊÖÉÏµÄ","HIR")+AXE_NAME+set_color("Å×µ½¿ÕÖÐ»¯³É³ÉÇ§ÉÏÍòµÄ¶ñ¹í³åÏò"+him+"¡£\n","HIR") );
			tell_object( victim,set_color(
				me+"½«ÊÖÉÏµÄ","HIR")+AXE_NAME+set_color("Å×µ½¿ÕÖÐ»¯³É³ÉÇ§ÉÏÍòµÄ¶ñ¹íÏòÄãÏ®À´¡£\n","HIR") );
			tell_room( environment(holder),set_color(
				me+"½«ÊÖÉÏµÄ","HIR")+AXE_NAME+set_color("Å×µ½¿ÕÖÐ»¯³É³ÉÇ§ÉÏÍòµÄ¶ñ¹í³åÏò"+him+"¡£\n","HIR"),({ holder,victim }) );
			victim->receive_damage( dam );
//			report( victim );
			holder->add( "spell_points",-5 );
			victim->set( "last_attacker",holder );
			return dam;
		}
	return 0;
	}
}
