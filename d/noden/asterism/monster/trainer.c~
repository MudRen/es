#include "../asterism.h"

inherit MONSTER;

void create()
{
	::create();
	set_level(14);
	set_name( "dwarf trainer", "矮人训练师" );
	add("id",({"trainer","dwarf"}) );
	set_short( "矮人训练师" );
	set_long(
		"一个矮人族的狮鹫兽训练师.\n"
	);
	set( "gender", "male" );
	set( "race", "dwarf" );
	set( "alignment", 450 );
	set( "time_to_heal", 7 );
	set_natural_armor( 56, 22 );
	set_natural_weapon( 22 , 15 , 20 );
	set("max_hp",500);
	set("hit_points",500);
	set_perm_stat( "str", 24 );
        set_perm_stat( "dex", 24 );	
	set_skill( "parry",80 );
	set_skill( "dodge",80 );       
        set_skill( "whip",80 );              

	set( "wealth/gold", 3 );
	set( "special_defense", ([ "all": 12 ]) );
	wield_weapon(WEAPONS"short_whip");
	equip_armor(ARMORS"leggings02");
	set("echo_asterism",1);
        set( "tactic_func", "cast_help" ); 
}

void init()
{
     add_action("block_mount","",1) ;
}

int block_mount(string ob)
{
     object mob ;
     if(query_verb()!="mount") return 0 ;
     if( ob != "griffon") return 0 ;
            
     if( !(mob = present(ob))) return 0 ;
                      
     if(mob->query("is_griffon"))
       {
         write("训练师挡在你身前瞪著你,不让你向狮鹫兽靠近。\n") ;

         tell_room(environment(this_object()),
               "训练师挡在"+this_player()->query("c_name")+
               "身前瞪著他,不让他向狮鹫兽靠近。\n"
               ,this_player() ) ;
         return 1 ;
       }      
     else return 0 ;      
}

int is_a_guard( object ob )
{
    if( ob->query_attacker() ) return 0;
    if( ob->query("echo_asterism") ) return 1;
    return 0;
}

int cast_help()
{ 
    object victim, *guard;
    int i;
    victim = query_attacker();
    if( !victim ) return 0;
    guard = filter_array( all_inventory(environment(this_object())),
            "is_a_guard", this_object() );
    for( i=0; i<sizeof(guard); i++ ) {
      tell_room( environment(this_object()),
             sprintf("驯兽师哨声一吹, 狮鹫兽向%s扑了过去。\n",
                   victim->query("c_name")),({ guard[i],victim })
               );
      tell_object(victim,"驯兽师哨声一吹, 狮鹫兽向你扑了过来。\n");
      guard[i]->kill_ob(victim);
    }
     return 0;
}

