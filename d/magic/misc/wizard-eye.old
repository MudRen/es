// This is a spell object. type -> other. look map.
// level     0     1     2     3     4    
// cost     10    15    20    25    30
// size    5*5   7*7 11*11 15*15 21*21
// skill    10    25    40    55    70
// G_LVL     5    15    25    30    35
// G_EXP    10    30    50   100   200
#include <mudlib.h>
#include "/d/magic/magic.c"
#define TYPE "misc"

inherit DAEMON;

int query_gain_spell_exp(int level)
{
	switch( level ) {
		case 0 : return  10;
		case 1 : return  30;
		case 2 : return  50;
		case 3 : return 100;
		case 4 : return 200;
		default : return 0;
	}
}

int query_need_spell_level(int level)
{
	return 5+level*10;
}

int query_sp_cost(object caster, int level)
{
	return modify_sp_cost(caster, 10+5*level, TYPE, query_need_spell_level(level));
}

int query_need_skill(int level)
{
	return 10+15*level;
}

int query_size(int level) 
{
    switch( level ) {
      case 1 : return  3;
      case 2 : return  5;
      case 3 : return  7;
      case 4 : return 10;
     default : return  2;
    }
}

int cast(int level)
{
  	int x, y, i, j, size, chinese_mode;
  	object player, env, v_server;
  	string tk, str, bar, legend;
  	
    size = query_size(level);
    player = this_player();
    chinese_mode = can_read_chinese( player );
    env = environment( player );

    if( (int)player->query_skill(TYPE) < query_need_skill(level) ) {
    	tell_object( player, chinese_mode?
    		"你现在的"+to_chinese(TYPE)+"不足以使用这等级的魔法!\n":
    		"Your "+TYPE+" skill is not enough to cast the level of this spell!\n"
    	);
    	return 0;
    }
    if( !env || !(v_server = env->query("virtual_server")) ) {
		tell_object( player, chinese_mode ?
		  "巫师之眼只有在野外才能使用。\n" :
		  "Wizard eye seems has no effect here.\n"
		);
		return 0;
	}
	tell_object( player, chinese_mode ?
	  "你施展巫师之眼，在你的面前显示出这附近地形地物。\n" :
	  "You cast wizard eye. A magic map appears in front of you.\n"
	);
	tell_room( env, ({
	  player->query("cap_name")+" says something.\n",
	  player->query("c_cap_name")+"开始喃喃自语。\n"  }), player
	);
	gain_spell_experience(player, TYPE, query_gain_spell_exp(level));
	x = (int)env->query("x_coordinate");
	y = (int)env->query("y_coordinate");
	bar = "+-";
	for( i=0; i<size*2+1; i++ )
		bar += "---";
	bar += "+\n";
	str = bar;
	for( i=-size; i<=size; i++ )
	{
		str += "| ";
		for( j=-size; j<=size; j++ ) {
			if( i==0 && j==0 )
				str += blink( "<*>" );
			else {
				legend = v_server->query_legend( x+j, y+i );
				switch( legend[0] ) {
					case 'P' : tk = "ww";	break;
					case 'F' : tk = "YY";	break;
					case 'B' : tk = "WW";	break;
					case 'M' : tk = "/\\";	break;
					case 'H' : tk = "/\\";	break;
					case 'R' : tk = "++";	break;
					case 'T' : tk = "[]";	break;
					case 'S' : tk = "%%";	break;
					case 'W' : tk = "==";	break;
					case 'O' : tk = "..";	break;
					default :  tk = "  ";	break;
				}
				if( legend[1]=='X' ) tk += bold("*"); else tk += " ";
				str += tk;
			}
		}
		str += "|\n";
	}
	str += bar;
	str += chinese_mode?
		sprintf("你目前的位置: (X = %d, Y = %d)\n", x, y):
		sprintf("Your location: (X = %d, Y = %d)\n", x, y);
	tell_object(player, str);
	return 1;
}
