   The MudOS mudlib 0.9 encumbrance system is similar to the 3.1.2 system
but somewhat more complex. Every object that a player might run into has
two properties: mass and bulk. Mass is the mass of the object: if your MUD
has constant gravity (don't laugh, some sci-fi MUDs don't) then this is
equivalent to the weight. Bulk is the amount of space the object takes up:
in some sense it represents how awkward the object is to carry. These
values are object properties and are set with the set command.
   Players are limited both in terms of how much mass they can carry and
how much bulk they can handle. In the default mudlib, players can carry up
to 500 units of bulk and 5000 units of weight. (For reference, a player
himself masses 7500 and bulks 1000. Coins have mass 1 and have negligible
bulk.) You can alter these values if you like, although they appear in
the mudlib in more than one place (we're working on that).
   Each player has two properties called volume and capacity which are the
amount of bulk and mass, respectively, than he can pick up before hitting
his limits. If the player is empty-handed, then these will be equal to 
500 and 5000 respectively. If he picks up an object bulking 10 and massing
100, then they will fall to 490 and 4900. The move() function in the standard
object takes care of checking to make sure that a player has sufficient
capacity and volume to pick up any object he attempts to pick up.
   Containers also have volume and capacity. These reflect the total amount
of bulk that can be stuffed into them, or the total amount of mass that will
break them open. For example, the standard bag (/obj/bag.c) has a volume
of 25 and a capacity of 100. It seems logical to us that the bulk of an
container should be larger than its volume, since you can't put a larger
object into a smaller one, magic bags of holding aside. This limit is not,
however, enforced. Similarly, there is no rule relating the mass of a 
container and its capacity (and it wouldn't make sense for there to be one
anyway).
   When a player places an object into a container, the mass of the container
goes up by the amount of the object's mass, and the reverse when the object
is removed. This is because if you put a rock in a sack, you still have to
lift the mass of the rock. However, the bulk of the container is not
affected when objects are put in or removed. Thus, if a player has objects
bulking 200 and massing 1000, and he puts a 50-bulk, 100-mass object into
a container he is carrying, he still has to carry a mass of 1000 but only
has to carry a bulk of 150. Because of this, containers only help you deal
with your bulk limit, not your weight limit. We think this is pretty
representative of reality. Note that a player can carry 10 times as many
mass units as bulk units. If all objects weighed 10 or more times as much
as they bulked, then the player would always hit his mass limit before his
bulk limit, and containers would not be helpful at all. Thus, most of the
mudlib objects mass between 2 and 5 times as much as they bulk, so that a
player tends to run into his bulk limit before he runs into his mass
limit, and containers tend to be useful.
  Some objects may have bulk, but no mass. Some objects might even have
negative mass.  The default mudlib, however, doesn't come with any such
objects. Other objects may have mass but no bulk. The most important
such object is a coin, which has negligible bulk but does have mass. IN
the default mudlib, each coin weighs one mass unit. Thus, if a player carries
many coins, he can carry fewer items, and vice-versa. If he wants to carry
5000 coins he must drop all his objects to do so. For this reason, players
may not be able to carry all the treasure they take from a monster. ("You
kill the dragon. The dragon has 460,000 copper coins. Congratulations, sucker."
Etcetera. Think about this when you make your areas...) This gives the
player an incentive to store money in banks as well.
   When a player picks up a pile of coins, moving the pile of coins onto
the player automatically updates the encumbrance. However, if the player
gets coins in some other way, such as by selling an item at the shop, his
encumbrance must be updated manually. The easiest way to do this, and the
way that is implemented in the shop, bank, and coin exchange, is to create
a pile of coins, set it to the appropriate number and type, and move it onto
the player. In this way, all the appropriate capacity checks are made and
the money is automatically credited to the player's wealth statistic. If
the player gives up money - perhaps by buying an item - you can just
subtract the coins from his wealth property and add to his encumbrance,
since you don't have to worry about the player going over his capacity
in giving up coins. In addition to the shop, bank, and exchange, the
proper way to handle the encumbrance of coins is shown in the get, drop,
and give commands.

Mobydick@TMI-2
11-13-92
